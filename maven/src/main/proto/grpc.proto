syntax = "proto3";

package plushie_tycoon;
//todo: map in proto is not ordered. Perhaps switch to 2 repeated fields?
//or alternatively we can provide an order object somewhere
service UITransfer {
    rpc buy(TransactionObject) returns (Snapshot) {};
    rpc sell(TransactionObject) returns (Snapshot) {};
    rpc make(TransactionObject) returns (Snapshot) {};
    rpc next(NullObject) returns (Snapshot) {};
    rpc save(NullObject) returns (Snapshot) {};
    rpc load(NullObject) returns (Snapshot) {};
    rpc back(NullObject) returns (Snapshot) {};
    rpc quit(NullObject) returns (Snapshot) {};
    rpc init(NullObject) returns (Snapshot) {};
}

service SendCalls {
    rpc register(UserID) returns (Snapshot) {};
    rpc isregistered(UserID) returns (ReturnCode) {};
    rpc send(ProposedChanges) returns (ReturnCode) {};
    rpc query(UserID) returns (Snapshot) {};
    rpc getTime(NullObject) returns (IntObject) {};
    rpc hasUpdate(UserID) returns (ReturnCode) {};
}

message ReturnCode {
    string message = 1;
    bool code = 2;
}

message IntObject {
    int32 item = 1;
}

message ProposedChanges {
    map<string, int32> buySell = 1;
    map<string, int32> make = 2;
    string userid = 3;
}

message UserID {
    string userid = 1;
}

message NullObject {
}

message TransactionObject {
    string name = 1;
    int32 quantity = 2;
}
//this should only be reportable metrics to frontend, not everything

message mItemCost {
    double movein = 3;
    double moveout = 4;
    double storage = 5;
}

message mRatioPerProduct {
    map<string, int32> ratio = 6;
}

message Snapshot {
    map<string, double> prices = 1;
    map<string, int32> quantities = 2;
    map<string, double> weights = 13;
    map<string, double> volumes = 14;
    map<string, mItemCost> item_cost = 12;
    map<string, mRatioPerProduct> resource_ratio = 7;
    string console_output = 8;
    double budget = 9;
    int32 time = 10;
    string action = 11;
}